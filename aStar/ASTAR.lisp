(let ((distance-info (make-hash-table :size 82))
      (path-predecessor-info (make-hash-table :size 82)) )
  (defun set-distances (x y)
    (setf (gethash x distance-info) y) )
  (defun get-distances (x)
    (gethash x distance-info) )
  (defun set-predecessor (x y)
    (setf (gethash x path-predecessor-info) y) )
  (defun get-predecessor (x)
    (gethash x path-predecessor-info) )
  )

(set-distances 'loscabos '((lapaz . 186)))
(set-distances 'lapaz '((loscabos . 186)(ciudadinsurgentes . 236)))
(set-distances 'ciudadinsurgentes '((lapaz . 236)(sanignacio . 392)))
(set-distances 'sanignacio '((ciudadinsurgentes . 392)(guerreronegro . 150)))
(set-distances 'guerreronegro '((sanignacio . 150)(ensenada . 609)(mexicali . 598)))
(set-distances 'ensenada '((guerreronegro . 609)(tijuana . 104)))
(set-distances 'tijuana '((ensenada . 104)(mexicali . 183)))
(set-distances 'mexicali '((tijuana . 183)(guerreronegro . 598)(santaana . 532)))
(set-distances 'hermosillo '((santaana . 171)(guaymas . 138)(chihuahua . 693)(aguaprieta . 377)))
(set-distances 'guaymas '((hermosillo . 138)(ciudadobregon . 129)))
(set-distances 'ciudadobregon '((guaymas . 129)(chihuahua . 630)(losmochis . 232)))
(set-distances 'chihuahua '((hermosillo . 693)(ciudadobregon . 630)(hidalgodelparral . 225)))
(set-distances 'hidalgodelparral '((chihuahua . 225)(durango . 408)(torreon . 325)))
(set-distances 'losmochis '((ciudadobregon . 232)(culiacan . 214)))
(set-distances 'culiacan '((losmochis . 214)(mazatlan . 219)))
(set-distances 'durango '((mazatlan . 244)(torreon . 245)(zacatecas . 292)(hidalgodelparral . 408)))
(set-distances 'torreon '((hidalgodelparral . 325)(durango . 245)(zacatecas . 390)(saltillo . 258)))
(set-distances 'tepic '((mazatlan . 278)(guadalajara . 204)(puertovallarta . 164)))
(set-distances 'guadalajara '((tepic . 204)(colima . 195)(aguascalientes . 221)(morelia . 290)(leon . 221)))
(set-distances 'colima '((guadalajara . 195)(ziguatanejo . 422)(puertovallarta . 378)))
(set-distances 'mazatlan '((culiacan . 219)(durango . 244)(tepic . 278)))
(set-distances 'santaana '((mexicali . 532)(aguaprieta . 209)(hermosillo . 171)))
(set-distances 'aguaprieta '((santaana . 209)(hermosillo . 377)(ciudadjuarez . 372)))
(set-distances 'ciudadjuarez '((aguaprieta . 372)(chihuahua . 363)))
(set-distances 'saltillo '((monclova . 196)(torreon . 258)(monterrey . 93)(zacatecas . 370)(matehuala . 254)))
(set-distances 'monclova '((saltillo . 196)(monterrey . 194)(nuevolaredo . 247)))
(set-distances 'monterrey '((monclova . 194)(saltillo . 93)(reynosa . 219)(ciudadvictoria . 284)(nuevolaredo . 221)))
(set-distances 'reynosa '((monterrey . 219)(ciudadvictoria . 326)(tampico . 515)(nuevolaredo . 258)))
(set-distances 'zacatecas '((durango . 292)(torreon . 390)(saltillo . 370)(matehuala . 379)(sanluispotosi . 190)(aguascalientes . 120)))
(set-distances 'matehuala '((saltillo . 254)(zacatecas . 379)(sanluispotosi . 194)))
(set-distances 'ciudadvictoria '((reynosa . 326)(tampico . 243)(sanluispotosi . 333)(monterrey . 284)))
(set-distances 'ziguatanejo '((colima . 422)(morelia . 350)(toluca . 418)(acapulco . 254)))
(set-distances 'aguascalientes '((zacatecas . 120)(guadalajara . 221)(guanajuato . 176)(sanluispotosi . 164)(leon . 125)))
(set-distances 'sanluispotosi '((matehuala . 194)(ciudadvictoria . 333)(ciudadvalles . 258)(sanmigueldeallende . 175)(guanajuato . 188)(leon . 187)(aguascalientes . 164)(zacatecas . 190)))
(set-distances 'ciudadvalles '((sanluispotosi . 258)(tampico . 142)(pachuca . 347)))
(set-distances 'tampico '((reynosa . 515)(ciudadvictoria . 243)(ciudadvalles . 142)(pozarica . 83)))
(set-distances 'pozarica '((tampico . 83)(pachuca . 197)(xalapa . 184)))
(set-distances 'guanajuato '((sanluispotosi . 188)(aguascalientes . 176)(salamanca . 67)(sanmigueldeallende . 87)(leon . 56)))
(set-distances 'salamanca '((guanajuato . 67)(queretaro . 121)(morelia . 114)(leon . 88)))
(set-distances 'sanmigueldeallende '((sanluispotosi . 175)(guanajuato . 87)(queretaro . 94)))
(set-distances 'queretaro '((sanmigueldeallende . 94)(salamanca . 121)(atlacomulco . 105)(pachuca . 200)))
(set-distances 'pachuca '((pozarica . 197)(xalapa . 280)(tlaxcala . 141)(cdmx . 115)(atlacomulco . 159)(queretaro . 200)(ciudadvalles . 347)))
(set-distances 'atlacomulco '((queretaro . 108)(pachuca . 159)(toluca . 67)(morelia . 162)))
(set-distances 'morelia '((salamanca . 114)(atlacomulco . 162)(ziguatanejo . 350)(guadalajara . 290)))
(set-distances 'toluca '((atlacomulco . 67)(cdmx . 76)(cuernavaca . 91)(ziguatanejo . 418)))
(set-distances 'cdmx '((pachuca . 115)(tlaxcala . 125)(puebla . 137)(jantetelco . 98)(cuernavaca . 54)(toluca . 76)))
(set-distances 'cuernavaca '((toluca . 91)(cdmx . 54)(jantetelco . 74)(chilpancingo . 187)))
(set-distances 'chilpancingo '((cuernavaca . 187)(acapulco . 109)))
(set-distances 'jantetelco '((cuernavaca . 74)(cdmx . 98)(puebla . 79)))
(set-distances 'tlaxcala '((pachuca . 141)(puebla . 40)(cdmx . 125)))
(set-distances 'xalapa '((pozarica . 184)(pachuca . 280)(puebla . 174)(tecamachalco . 155)(tuxtepec . 260)))
(set-distances 'puebla '((tlaxcala . 40)(xalapa . 174)(tecamachalco . 71)(jantetelco . 79)(cdmx . 137)))
(set-distances 'tecamachalco '((puebla . 71)(xalapa . 155)(oaxaca . 290)(huajuapan . 167)))
(set-distances 'acapulco '((ziguatanejo . 254)(chilpancingo . 109)(pinotepanacional . 250)))
(set-distances 'pinotepanacional '((acapulco . 250)(huajuapan . 283)(riogrande . 91)))
(set-distances 'huajuapan '((tecamachalco . 167)(oaxaca . 173)(pinotepanacional . 283)))
(set-distances 'riogrande '((pinotepanacional . 91)(oaxaca . 247)(ixtepec . 346)))
(set-distances 'oaxaca '((tecamachalco . 290)(tuxtepec . 216)(ixtepec . 277)(riogrande . 247)(huajuapan . 173)))
(set-distances 'tuxtepec '((xalapa . 260)(coatzacoalco . 227)(oaxaca . 216)))
(set-distances 'coatzacoalco '((tuxtepec . 227)(ixtepec . 255)(tuxtlagutierrez . 249)(villahermosa . 166)))
(set-distances 'ixtepec '((coatzacoalco . 255)(tuxtlagutierrez . 270)(tapachula . 399)(riogrande . 346)(oaxaca . 277)))
(set-distances 'villahermosa '((coatzacoalco . 166)(tuxtlagutierrez . 247)(ciudaddelcarmen . 177)(palenque . 148)))
(set-distances 'puertovallarta '((tepic . 164)(colima . 378)))
(set-distances 'tuxtlagutierrez '((villahermosa . 247)(coatzacoalco . 249)(ixtepec . 270)(tapachula . 388)(palenque . 269)))
(set-distances 'tapachula '((ixtepec . 399)(tuxtlagutierrez . 388)(palenque . 461)))
(set-distances 'palenque '((villahermosa . 148)(tuxtlagutierrez . 269)(tapachula . 461)(escarcega . 214)))
(set-distances 'ciudaddelcarmen '((villahermosa . 177)(sabancuy . 83)))
(set-distances 'sabancuy '((ciudaddelcarmen . 83)(campeche . 129)(escarcega . 81)))
(set-distances 'escarcega '((palenque . 214)(sabancuy . 81)(bacalar . 273)))
(set-distances 'bacalar '((escarcega . 273)(maxcanu . 348)(merida . 344)(valladolid . 264)(chetumal . 40)))
(set-distances 'campeche '((sabancuy . 129)(maxcanu . 126)(merida . 186)))
(set-distances 'maxcanu '((campeche . 126)(merida . 67)(bacalar . 348)))
(set-distances 'leon '((guadalajara . 221)(aguascalientes . 125)(sanluispotosi . 187)(guanajuato . 56)(salamanca . 88)))
(set-distances 'merida '((campeche . 186)(maxcanu . 67)(bacalar . 344)(valladolid . 169)))
(set-distances 'chetumal '((bacalar . 40)(valladolid . 302)(tulum . 253)))
(set-distances 'nuevolaredo '((reynosa . 258)(monterrey . 221)(monclova . 247)))
(set-distances 'tulum '((chetumal . 253)(valladolid . 102)(playadelcarmen . 64)))
(set-distances 'playadelcarmen '((tulum . 64)(cancun . 68)(valladolid . 141)))
(set-distances 'cancun '((playadelcarmen . 68)(valladolid . 156)))
(set-distances 'valladolid '((merida . 169)(cancun . 156)(playadelcarmen . 141)(tulum . 102)(chetumal . 302)(bacalar . 264)))


(let ((f-values (make-hash-table :size 82))
      (g-values (make-hash-table :size 82)) )
  (defun set-f-value (x y)
    (setf (gethash x f-values) y) )
  (defun get-f-value (x)
    (gethash x f-values) )
  (defun set-g-value (x y)
    (setf (gethash x g-values) y) )
  (defun get-g-value (x)
    (gethash x g-values) )
  )


(let ((longitude-info (make-hash-table :size 82)))
  (defun set-longitude (x y)
    (setf (gethash x longitude-info) y) )
  (defun get-longitude (x)
    (gethash x longitude-info) )
 )


(mapcar #'(lambda (pair) (apply #'set-longitude pair))
	'((loscabos -110)(lapaz -110)(ciudadinsurgentes -112) (sanignacio -113) 
    (guerreronegro -114) (ensenada -117) (tijuana -117) (mexicali -115)
    (hermosillo -111)(guaymas -111)(ciudadobregon -110)(chihuahua -106)(hidalgodelparral -106)
    (losmochis -109)(culiacan -107)(durango -105)(torreon -103)(tepic -105)(guadalajara -103.36)
    (colima -104)(mazatlan -106)(santaana -103)(aguaprieta -110)(ciudadjuarez -106)(saltillo -101)
    (monclova -101)(monterrey -100)(reynosa -98)(zacatecas -103)(matehuala -101)(ciudadvictoria -99)
    (ziguatanejo -102)(aguascalientes -102)(sanluispotosi -101)(ciudadvalles -99)(tampico -98)
    (pozarica -97)(guanajuato -101)(salamanca -101)(sanmigueldeallende -101)(queretaro -100)
    (pachuca -99) (atlacomulco -100)(morelia -101)(toluca -100)(cdmx -99)(cuernavaca -99)
    (chilpancingo -100)(jantetelco -99)(tlaxcala -98)(xalapa -97)(puebla -98)(tecamachalco -98)
    (acapulco -100)(pinotepanacional -98)(huajuapan -98)(riogrande -97)(oaxaca -97)(tuxtepec -96)
    (coatzacoalco -94)(ixtepec -95)(villahermosa -93)(puertovallarta -105)
    (tuxtlagutierrez -93)(tapachula -92)(palenque -92)(ciudaddelcarmen -92)(sabancuy -91)
    (escarcega -91)(bacalar -88)(campeche -88)(maxcanu -90)(leon -102)(merida -90)
    (chetumal -88)(nuevolaredo -100)(tulum -87)(playadelcarmen -87) (cancun -87) (valladolid -88)) )

(defun a-star-search (start-node goal-node)
  (set-goal goal-node)
  (let ((open (list start-node))                
        (closed nil)
        x
        successors)
    (set-predecessor start-node nil)
    (set-g-value start-node 0)
    (set-f-value start-node (f start-node))
    (loop
      (if (null open)(return 'failure))         
      (setf x (select-best open))               
      (setf open (remove x open))               
      (push x closed)
      (if (eql x (get-goal))
          (return (extract-path x)) )           
      (setf successors (get-successors x))      
      (dolist (y successors)                    
        (if (not (or (member y open)
                     (member y closed) ))
          (progn
            (increment-count)
            (set-g-value y (g y x))
            (set-f-value y (f y))
            (setf open (insert y open))
            (set-predecessor y x) )
          (let* ((z (get-predecessor y))
                (temp (if z
                        (+ (- (get-f-value y)
                              (get-g-value z)
                              (arc-dist z y) )
                           (get-g-value x)
                           (arc-dist x y) )
                        (get-f-value y) ) ) )
            (if (< temp (get-f-value y))
              (progn
                (set-g-value y
                      (+ (- (get-g-value y)
                            (get-f-value y) )
                         temp) )
                (set-f-value y temp)
                (set-predecessor y x)
                (if (member y open)
                  (progn
                    (setf open (remove y open))
                    (setf open (insert y open)) ) )
                (if (member y closed)
                  (progn
                    (setf open (insert y open))
                    (setf closed
                          (remove y closed) ) ) ) ) ) ) ) )
       ) ) )


(let (goal)
  (defun set-goal (the-goal) (setf goal the-goal))
(defun get-goal () goal) )

(defun f (n)
  (+ (get-g-value n) (h n)) )

(defun g (node x)
  (+ (get-g-value x) (arc-dist x node)) )

(defun h (n)
  (* 10 (longitude-diff n (get-goal))) )

(defun longitude-diff (n1 n2)
  (abs (- (get-longitude n1) (get-longitude n2))) )

(defun select-best (lst)
  (if (eql (first lst) (get-goal))
      (first lst)
    (better (first lst)(rest lst)) ) )

(defun better (elt lst)
  (cond ((null lst) elt)
        ((< (get-f-value elt)(get-f-value (first lst)))
         elt)
        ((eql (first lst) (get-goal))
         (first lst) )
        (t (better elt (rest lst))) ) )

(defun insert (node lst)
  (cond ((null lst)(list node))
        ((< (get-f-value node)
            (get-f-value (first lst)) )
         (cons node lst) )
        (t (cons (first lst)
                 (insert node (rest lst)) )) ) )

(defun extract-path (n)
  (cond ((null n) nil)
        (t (append (extract-path (get-predecessor n))
                   (list n) )) ) )

(defun get-successors (n)
  (mapcar #'first (get-distances n)) )

(defconstant big-distance 9999)

(defun arc-dist (n1 n2) 
  (or (rest (assoc n1 (get-distances n2))) big-distance) )

(let (expansion-count)
  (defun initialize-count () (setf expansion-count 0))
  (defun increment-count () (incf expansion-count))
  (defun get-count () expansion-count) )


(defun look (start end)
  (initialize-count)
  (format t "solution: \"~s \" } ~%"
    (a-star-search start end) )
  (format t "\"Path-length\": ~s } ~%" 
    (get-f-value end) )
  (format t "\"nodes expanded\": ~s} ~%"
    (get-count) )
  )

